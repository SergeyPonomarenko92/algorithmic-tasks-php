//Задача. Создайте массив, заполненный числами от 1 до 100. Найдите сумму элементов данного массива.
<?php
var_dump(range(1, 100));
?>

<?php
echo array_sum(range(1, 100));
?>

//  Дан массив с элементами 'a', 'b', 'c', 'd', 'e'. С помощью функции array_map сделайте из него массив 'A', 'B', 'C', 'D', 'E'.
<?php
$arr = ['a', 'b', 'c', 'd', 'e'];
$arr = array_map('strtoupper', $arr);
var_dump ($arr);
?>

//  Дан массив $arr. Подсчитайте количество элементов этого массива.
<?php
$arr = ['a', 'b', 'c', 'd', 'e'];
echo count($arr);
?>

//  Дан массив $arr. С помощью функции count выведите последний элемент данного массива.
<?php
$arr = ['a', 'b', 'c', 'd', 'e'];
$x = count($arr, -1);
var_dump($x);
?>

// Дан массив с числами. Проверьте, что в нем есть элемент со значением 3.
<?php
$arr = [3,12,23,12,23123,67,123];
$result = in_array(3, $arr);
var_dump($result);
?>

//  Дан массив [1, 2, 3, 4, 5]. Найдите сумму элементов данного массива.
<?php
$arr = [1, 2, 3, 4, 5];
echo array_sum($arr);
?>

//  Дан массив [1, 2, 3, 4, 5]. Найдите произведение (умножение) элементов данного массива.
<?php
$arr = [1, 2, 3, 4, 5];
echo array_product($arr);
?>

//  Дан массив $arr. С помощью функций array_sum и count найдите среднее арифметическое элементов (сумма элементов делить на их количество) данного массива.
<?php
$arr = [1, 2, 3, 4, 5];
$count = count($arr);
$x = array_sum($arr);
echo $x / $count;
?>


// Создайте массив, заполненный числами от 1 до 100.
<?php
$arr = range(1,100);
print_r ($arr);
?>

//  Создайте массив, заполненный буквами от 'a' до 'z'.
<?php
$arr = range('a','z');
echo $arr;
?>

// Создайте строку '1-2-3-4-5-6-7-8-9' не используя цикл.
<?php
$arr = [1,2,3,4,5,6,7,8,9,0];
$str = implode(' ', $arr);
var_dump( $str);
?>

// Найдите сумму чисел от 1 до 100 не используя цикл.
<?php
$arr = range(1, 100);
echo array_sum($arr)
?>

// Найдите произведение чисел от 1 до 10 не используя цикл.
<?php
$arr = range(1, 10);
echo array_product($arr)
?>

// Даны два массива: первый с элементами 1, 2, 3, второй с элементами 'a', 'b', 'c'. Сделайте из них массив с элементами 1, 2, 3, 'a', 'b', 'c'.
<?php
$arr = [1, 2, 3];
$arr2 =[ 'a', 'b', 'c'];
echo array_merge($arr, $arr2);
?>


// Дан массив с элементами 1, 2, 3, 4, 5. С помощью функции array_slice создайте из него массив $result с элементами 2, 3, 4.
<?php
$arr = [1, 2, 3, 4, 5.];
$x = array_slice($arr,1,3);
print_r($x);
?>

//  Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice преобразуйте массив в [1, 4, 5].
<?php
$arr = [1, 2, 3, 4, 5];
$result = array_splice($arr, 1, 2);
print_r($arr);
print_r($result);
?>

//  Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice запишите в новый массив элементы [2, 3, 4].
<?php
$arr = [1, 2, 3, 4, 5];
$result = array_splice($arr, 1, 2);
print_r($arr);
print_r($result);
?>

//  Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice запишите в новый массив элементы [2, 3, 4].
<?php
$arr = [1, 2, 3, 4, 5];
$result = array_splice($arr, 1, 3);
print_r($result);
?>

// Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice сделайте из него массив [1, 2, 3, 'a', 'b', 'c', 4, 5].
<?php
$arr = [1, 2, 3, 4, 5];
$result = array_splice($arr, 1, 3, ['a', 'b', 'c']);
print_r($arr);
?>

//  Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].
<?php
$arr = [1, 2, 3, 4, 5];
$result = array_splice($arr, 1, 0, ['a', 'b']);
$result = array_splice($arr, 5, 0, ['c']);
$result = array_splice($arr, 7, 0, ['e']);
print_r($arr);
?>

// Дан массив 'a'=>1, 'b'=>2, 'c'=>3'. Запишите в массив $keys ключи из этого массива, а в $values – значения.
<?php
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
foreach ($arr as $keys => $value){
}
?>

// Даны два массива: ['a', 'b', 'c'] и [1, 2, 3]. Создайте с их помощью массив 'a'=>1, 'b'=>2, 'c'=>3'.
<?php
$str = ['a', 'b', 'c'] ;
$num = [1, 2, 3] ;
$arr = array_combine($str, $num);
var_dump($arr);
?>

// Дан массив 'a'=>1, 'b'=>2, 'c'=>3. Поменяйте в нем местами ключи и значения.
<?php
$str = ['a'=>1, 'b'=>2, 'c'=>3] ;
echo array_flip($str);
?>

//  Дан массив с элементами 1, 2, 3, 4, 5. Сделайте из него массив с элементами 5, 4, 3, 2, 1.
<?php
$str = [1, 2, 3, 4, 5];
var_dump (array_reverse($str));
?>

// Дан массив ['a', '-', 'b', '-', 'c', '-', 'd']. Найдите позицию первого элемента '-'.
<?php
$arr = ['a', '-', 'b', '-', 'c', '-', 'd'];
$x = array_search('-', $arr);
var_dump($x);
?>

// Дан массив ['a', '-', 'b', '-', 'c', '-', 'd']. Найдите позицию первого элемента '-' и удалите его с помощью функции array_splice.
<?php
$arr = ['a', '-', 'b', '-', 'c', '-', 'd'];
$x = array_search('-', $arr);
$y = array_slice($arr, $x,1);
var_dump($y);
?>

// Дан массив ['a', 'b', 'c', 'd', 'e']. Поменяйте элемент с ключом 0 на '!', а элемент с ключом 3 - на '!!'.
<?php
$arr = ['a', 'b', 'c', 'd', 'e'];
$replace = ['!', 3 => '!!'];
$y = array_replace($arr, $replace);
var_dump($y);
?>

// Дан массив '3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'. Попробуйте на нем различные типы сортировок.
<?php
$arr = ['3'=>'a','1'=>'c','2'=>'e','4'=>'b'];
sort($arr);
var_dump($arr);
rsort($arr);
var_dump($arr);
asort($arr);
var_dump($arr);
arsort($arr);
var_dump($arr);
ksort($arr);
var_dump($arr);
natsort($arr);
var_dump($arr);
?>

// Дан массив с элементами 'a'=>1, 'b'=>2, 'c'=>3. Выведите на экран случайный ключ из данного массива.
<?php
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
echo array_rand($arr);
?>

// Дан массив с элементами 'a'=>1, 'b'=>2, 'c'=>3. Выведите на экран случайный элемент данного массива.
<?php
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
foreach ($arr as $value){
    echo array_rand($value);
}
?>

// Дан массив $arr. Перемешайте его элементы в случайном порядке.
<?php
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
foreach ($arr as $value){
    echo array_rand($value);
}
?>

// Дан массив $arr. Перемешайте его элементы в случайном порядке.
<?php
$arr = [1,2,3,4,5,6,7,8,9,0];
shuffle($arr);
var_dump($arr);
?>

// Заполните массив числами от 1 до 25 с помощью range, а затем перемешайте его элементы в случайном порядке.
<?php
$arr = range(1,25);
shuffle($arr);
var_dump ($arr);
?>

//  Создайте массив, заполненный буквами от 'a' до 'z' так, чтобы буквы шли в случайном порядке и не повторялись.
<?php
$arr = range('a','z');
shuffle($arr);
var_dump ($arr);
?>

// Сделайте строку длиной 6 символов, состоящую из маленьких английских букв, расположенных в случайном порядке. Буквы не должны повторяться.
<?php
$arr = range('a','f');
print_r($arr);
shuffle($arr);
var_dump ($arr);
?>

// Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Удалите из него повторяющиеся элементы.
<?php
$arr = ['a', 'b', 'c', 'b', 'a'];
$x = array_unique($arr);
var_dump($x);
?>

// Дан массив с элементами 1, 2, 3, 4, 5. Выведите на экран его первый и последний элемент, причем так, чтобы в исходном массиве они исчезли.
<?php
$arr = [1, 2, 3, 4, 5];
array_pop($arr);
array_shift($arr);
var_dump($arr);
?>

// Дан массив с элементами 1, 2, 3, 4, 5. Добавьте ему в начало элемент 0, а в конец - элемент 6.
<?php
$arr = [1, 2, 3, 4, 5];
array_push($arr, 6);
array_unshift($arr, 0);
var_dump($arr);
?>

// Дан массив с элементами 1, 2, 3, 4, 5, 6, 7, 8. С помощью цикла и функций array_shift и array_pop выведите на экран его элементы в следующем порядке: 18273645.
<?php
$arr = [1, 2, 3, 4, 5, 6, 7, 8];
$i = 0;
while (count($arr) > 0) {
    $i .= array_shift($arr);
    $i .= array_pop($arr);
}
echo $i;
?>


// Дан массив с элементами 'a', 'b', 'c'. Сделайте из него массив с элементами 'a', 'b', 'c', '-', '-', '-'.
<?php
$arr = ['a', 'b', 'c'];
 array_pad($arr, 4,'-');
?>

//  Заполните массив 10-ю буквами 'x'.
<?php
$arr = [''];
$x = array_pad($arr, 10,'x');
var_dump($x);
?>

// Создайте массив, заполненный целыми числами от 1 до 20. С помощью функции array_chunk разбейте этот массив на 5 подмассивов ([1, 2, 3, 4]; [5, 6, 7, 8] и т.д.).
<?php
$arr = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20];
$x = array_chunk($arr, 4);
var_dump($x);
?>

// Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Подсчитайте сколько раз встречается каждая из букв.

<?php
$arr = [ 'a', 'b', 'c', 'b', 'a'];
var_dump(array_count_values($arr));
?>

// Дан массив с элементами 1, 2, 3, 4, 5. Создайте новый массив, в котором будут лежать квадратные корни данных элементов.
<?php
$arr = [1,2,3,4,5];
$x = array_map('sqrt',$arr);
var_dump($x);
?>

// Дан массив с элементами '<b>php</b>', ' <i>html</i>'. Создайте новый массив, в котором из элементов будут удалены теги.
<?php
$arr = ['<b>php</b>', ' <i>html</i>'];
$x = array_map('strip_tags',$arr);
var_dump($x);
?>

// Дан массив с элементами ' a ', ' b ', ' с '. Создайте новый массив, в котором будут данные элементы без концевых пробелов.
<?php
$arr = [ ' a ', ' b ', ' с '];
foreach ($arr as $value) {
    $value = rtrim($value, ' ');
var_dump($value);
}
?>

// Дан массив с элементами 1, 2, 3, 4, 5 и массив с элементами 3, 4, 5, 6, 7. Запишите в новый массив элементы, которые есть и в том, и в другом массиве.
<?php
$arr = [ 1, 2, 3, 4, 5];
$arr2 = [ 3, 4, 5, 6, 7];
$result = array_intersect($arr, $arr2);
?>

// Дан массив с элементами 1, 2, 3, 4, 5 и массив с элементами 3, 4, 5, 6, 7. Запишите в новый массив элементы, которые не присутствуют в обоих массивах одновременно.
<?php
$arr = [ 1, 2, 3, 4, 5];
$arr2 = [ 3, 4, 5, 6, 7];
$result = array_diff($arr, $arr2);
var_dump($result);
?>

// Дана строка '1234567890'. Найдите сумму цифр из этой строки не используя цикл.
<?php
$arr = str_split('1234567890', 1);
echo array_sum($arr);
?>

// Создайте массив ['a'=>1, 'b'=2... 'z'=>26] не используя цикл.
<?php
$int = range(1,26);
$str = range('a','z');
$result = array_combine($int, $str);
var_dump($result);
?>

// Создайте массив вида [[1, 2, 3], [4, 5, 6], [7, 8, 9]] не используя цикл.
<?php
$arr =  [1,2,3,4,5,6,7,8,9];
$result = array_chunk($arr, 3);
var_dump($result);
?>

// Дан массив с элементами 1, 2, 4, 5, 5. Найдите второй по величине элемент. В нашем случае это будет 4.
<?php
$arr =  [1, 2, 4, 5, 5];
$i = array_unique($arr);
echo $i[2];
?>














