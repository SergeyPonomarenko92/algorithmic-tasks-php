

//Дана строка 'minsk'. Сделайте из нее строку 'MINSK'.

<?php
$a = "minsk";
$b = strtoupper($a);
echo $b;
?>

//Задача. Дана строка 'MINSK'. Сделайте из нее строку 'Minsk'.

<?php
$a = "MINSK";
$b = ucfirst(strtolower($a));
echo $b;
?>
//В переменной $date лежит дата в формате '31-12-2030'. Преобразуйте эту дату в формат '2030.12.31
<?php
$a = "31-12-2030";
$b = (explode('.', $a));
echo $b[2].'.'.$b[1].'.'.$b[0];
?>



// Дана строка 'html css php'. Найдите количество символов в этой строке.

<?php
$a = "html css php";
echo strlen($a);
?>

//Дана переменная $password, в которой хранится пароль пользователя. Если количество символов пароля больше 5-ти и меньше 10-ти, то выведите пользователю сообщение о том, что пароль подходит, иначе сообщение о том, что нужно придумать другой пароль.
<?php
$password = "password";
$validation = strlen($password);
if ($validation >= 5 && $validation <= 10 ){
    echo 'good';
}else {
    echo 'bad';
}
?>


//  Дана строка. Вырежите и выведите на экран последние 3 символа этой строки.

<?php
$password = "password";
$validation = substr($password, strlen($password) - 3);
echo $validation;
?>

// Дана строка. Проверьте, что она начинается на 'http://'. Если это так, выведите 'да', если не так - 'нет'.


<?php
$password = "http://www.google.com/";
$validation = substr($password, 0, 7);
if ($validation == 'http://'){
 echo   'da';
}else{
    echo 'net';

}
?>

//Дана строка. Проверьте, что она начинается на 'http://' или на 'https://'. Если это так, выведите 'да', если не так - 'нет'.

<?php

$password = "http://www.google.com/";
$validation = substr($password, 0, 7);
$validations = substr($password, 0, 8);
if ($validation == 'http://' || $validations == 'https://'){
 echo   'da';
}else{
    echo 'net';

}
?>


//Дана строка. Проверьте, что она заканчивается на '.png'. Если это так, выведите 'да', если не так - 'нет'.

<?php
$password = ".png";
$validation = substr($password, strlen($password) - 4);
echo $validation;
?>


//Дана строка. Проверьте, что она заканчивается на '.png' или на '.jpg'. Если это так, выведите 'да', если не так - 'нет'.

<?php

$password = ".png";
$validation = substr($password, strlen($password) - 4);
$validation = substr($password, strlen($password) - 4);
if ($validation == '.png' || $validations == '.jpg'){
 echo   'da';
}else{
    echo 'net';

}
?>

// Дана строка. Если в этой строке более 5-ти символов - вырежите из нее первые 5 символов, добавьте троеточие в конец и выведите на экран. Если же в этой строке 5 и менее символов - просто выведите эту строку на экран.
<?php
$str = "http://www.google.com/";
if(strlen($str) > 5) {
    echo substr($str, 0, 5). '…';
} else {
    echo $str;
}
?> 


// Для решения задач данного блока вам понадобятся следующие функции: str_replace. 

<?php
$str = "31.12.2013";
$arr = str_replace('.', '-', $str);
?>



// Дана строка $str. Замените в ней все буквы 'a' на цифру 1, буквы 'b' - на 2, а буквы 'c' - на 3.

<?php
$str = "aahhbbjjcc";
echo str_replace(['a', 'b', 'c'], [1, 2, 3], $str);
?>

//Дана строка с буквами и цифрами, например, '1a2b3c4b5d6e7f8g9h0'. Удалите из нее все цифры. То есть в нашем случае должна получится строка 'abcbdefgh'.
<?php
$str = "1a2b3c4b5d6e7f8g9h0";
echo str_replace(['1', '2', '3', '4','5','6','6','7','8','9','0'], [], $str);
?>

//Дана строка $str. Замените в ней все буквы 'a' на цифру 1, буквы 'b' - на 2, а буквы 'c' - на 3. Решите задачу двумя способами работы с функцией strtr (массив замен и две строки замен).

<?php
$str = "1a2b3c4b";
echo strtr($str, ['1'=>'a', '2'=>'b']);
?>



// Дана строка $str. Вырежите из нее подстроку с 3-го символа (отсчет с нуля), 5 штук и вместо нее вставьте '!!!'
<?php
$str = "aaaaaaaaaa";
echo substr_replace($str, '!!!', 3, 5);
?>

// Дана строка 'abc abc abc'. Определите позицию первой буквы 'b'.
<?php
 echo strpos('abcde abcde', 'c');
?>


// Дана строка 'abc abc abc'. Определите позицию последней буквы 'b'.
  <?php 
    echo strrpos('abc abc abc', 'b'); 
  ?> 



 // Дана строка 'aaa aaa aaa aaa aaa'. Определите позицию второго пробела.
<?php
$str = "aaa aaa aaa aaa aaa";
echo strpos($str, ' ');
?>

// Проверьте, что в строке есть две точки подряд. Если это так - выведите 'есть', если не так - 'нет'.
<?php
$str = "aaaaaaaaa..aaaaaa";
if (strpos($str, '..') !== false ){
    echo "da";
}else{
    echo "net";
}
?>

// Проверьте, что строка начинается на 'http://'. Если это так - выведите 'да', если не так - 'нет'.

<?php
$str = "http://";
if (strpos($str,'http://') === 0 ){
    echo "da";
}else{
    echo "net";
}
?>

// Дана строка 'html css php'. С помощью функции explode запишите каждое слово этой строки в отдельный элемент массива.
<?php
$str = "html css php";
$arr = explode(',',$str);
print_r($arr);
?>

// Дан массив с элементами 'html', 'css', 'php'. С помощью функции implode создайте строку из этих элементов, разделенных запятыми.
<?php
$str = ['html', 'css', 'php'];
$arr = implode(',',$str);
echo $arr;
?>

// В переменной $date лежит дата в формате '2013-12-31'. Преобразуйте эту дату в формат '31.12.2013'.
<?php
$date = '2013-12-31';
$arr = explode('.',$date);
echo $arr[2].'.'.$arr[1].'.'.$arr[0];
?>


// Дана строка '1234567890'. Разбейте ее на массив с элементами '12', '34', '56', '78', '90'.
<?php
$str = '1234567890';
$arr = str_split($str,2);
print_r($arr)
?>


// Дана строка '1234567890'. Разбейте ее на массив с элементами '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'.
<?php
$str = '1234567890';
$arr = str_split($str,1);
print_r($arr)
?>

// Дана строка '1234567890'. Сделайте из нее строку '12-34-56-78-90' не используя цикл.

<?php
$str = '1234567890';
$arr = str_split($str,2);
print_r($arr);
?>

// Дана строка. Очистите ее от концевых пробелов.
<?php
$str = '12345   67890     ';
echo trim($str);
?>

// Дана строка '/php/'. Сделайте из нее строку 'php', удалив концевые слеши.
<?php
$str = '/php/';
echo trim($str, '/');
?>

//Дана строка 'слова слова слова.'. В конце этой строки может быть точка, а может и не быть. Сделайте так, чтобы в конце этой строки гарантировано стояла точка. То есть: если этой точки нет - ее надо добавить, а если есть - ничего не делать. Задачу решите через rtrim без всяких ифов.
<?php
$str = 'слова слова слова.';
$arr = rtrim($str, '.');
echo $arr . ".";
?>

// Дана строка '12345'. Сделайте из нее строку '54321'.

<?php
$str = '12345';
echo strrev($str);
?>

//  Проверьте, является ли слово палиндромом (одинаково читается во всех направлениях, примеры таких слов: madam, otto, kayak, nun, level).
<?php
$str = 'level';
$prev = strrev($str);
if ($str == $prev){
    echo 'true';
}else{
    echo 'false';
}
?>

// Дана строка. Перемешайте символы этой строки в случайном порядке.

<?php
$str = '12345';
echo str_shuffle($str);
?>

//Создайте строку из 6-ти случайных маленьких латинских букв так, чтобы буквы не повторялись. Нужно сделать так, чтобы в нашей строке могла быть любая латинская буква, а не ограниченный набор.

  <?php 
    $str = 'qwertyuiopasdfghjklzxcvbnm'; //все латинские буквы 
    $newStr = str_shuffle($str); //перемешиваем их 
    echo substr($newStr, 0, 6); //берем первые 6 символов 
  ?> 


// Дана строка '12345678'. Сделайте из нее строку '12 345 678'.

<?php
$num = 12345678;
$str = number_format($num, 0, ' ', ' ' );
echo $str;
?>

 //  Нарисуйте пирамиду, как показано на рисунке. Решите задачу с помощью одного цикла и функции str_repeat.
<?php

for ($i = 0; $i <= 9; $i++){
    echo str_repeat($i , $i).'<br>';
}
?>

// Дана строка 'html, <b>php</b>, js'. Удалите теги из этой строки.
<?php
$num = 'html, <b>php</b>, js';
    echo strip_tags($num).'<br>';
?>

//  Дана строка $str. Удалите все теги из этой строки, кроме тегов <b> и <i>.
<?php
$num = 'html,<br> <i> <b>php</b>, js';
    echo strip_tags($num, '<b>, <i>').'<br>';
?>

// Дана строка 'html, <b>php</b>, js'. Выведите ее на экран 'как есть': то есть браузер не должен преобразовать <b> в жирный.

<?php
$num = 'html, <b>php</b>, js';
    echo strip_tags($num).'<br>';
?>


//  Узнайте код символов 'a', 'b', 'c', пробела.
  <?php 
    echo ord('a'); 
    echo ord('b'); 
    echo ord('c'); 
    echo ord(' '); 
  ?>  

// Изучите таблицу ASCII. Определите границы, в которых располагаются буквы английского алфавита.


// Выведите на экран символ с кодом 33.

<?php=
    echo chr('33');
?>

// Запишите в переменную $str случайный символ - большую букву латинского алфавита. Подсказка: с помощью таблицы ASCII определите какие целые числа соответствуют большим буквам латинского алфавита.

<?php
$str = '65';
    echo chr($str);
?>



// Запишите в переменную $str случайную строку $len длиной, состоящую из маленьких букв латинского алфавита. Подсказка: воспользуйтесь циклом for или while.

<?php
$str = '';
$len = 5;
for ($i = 1; $i <= $len; $i++) {
    $str .= chr(rand(65, 90));
}
echo $str;
?>

// Дана буква английского алфавита. Узнайте, она маленькая или большая.

<?php
$char ="A";
$ord = ord($char);
$chr = chr($ord);
if ($chr >= 65 && $chr <= 90 ){
        echo "da";
    }else{
        echo 'no';
    }
?>

//  Дана строка 'ab-cd-ef'. С помощью функции strchr выведите на экран строку '-cd-ef'.
<?php
$char ='ab-cd-ef';
echo strstr($char, '-');
?>

// Дана строка 'ab-cd-ef'. С помощью функции strrchr выведите на экран строку '-ef'.

<?php
$char ='ab-cd-ef';
echo strrchr($char, '-');
?>

//  Дана строка 'ab--cd--ef'. С помощью функции strstr выведите на экран строку '--cd--ef'.

<?php
$char ='ab--cd--ef';
echo strstr($char, '--');
?>


// Преобразуйте строку 'var_test_text' в 'varTestText'. Скрипт, конечно же, должен работать с любыми аналогичными строками.

<?php
$char ='var_test_text';
$arr = explode( '_', $char);
$x = '';
foreach ($arr as $key => $elem){
    if ($key != 0){
        $x = ucfirst($elem);
    }else{
    $x = $elem;
    }
    echo $x;
}
?>

// Дан массив с числами. Выведите на экран все числа, в которых есть цифра 3.

<?php
$arr = [33,12,123,44,54,123,63, 33];
foreach ($arr as $key => $value){
    if (strpos($value, '3') !== false) {
        var_dump( $value);
    }
}
?>























